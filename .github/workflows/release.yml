name: Create Release

on:
  schedule:
    - cron: "0 0 * * *" # Run once a day
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  release:
    if: github.repository == 'bufbuild/plugins'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        if: github.repository == 'bufbuild/plugins'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
          check-latest: true
          cache: true
        # uses https://cloud.google.com/iam/docs/workload-identity-federation to
        # swap a Github OIDC token for GCP service account credentials, allowing
        # this workflow to manage the deploy bucket
      - name: Auth To GCP
        uses: google-github-actions/auth@v0
        with:
          workload_identity_proider: projects/491113660045/locations/global/workloadIdentityPools/plugins-workload-pool/providers/plugins-workload-provider
          service_account: buf-plugins-1-publisher@buf-plugins-1.iam.gserviceaccount.com
      - name: Setup GCLOUD
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MINISIGN_PRIVATE_KEY: ${{ secrets.MINISIGN_PRIVATE_KEY }}
          MINISIGN_PRIVATE_KEY_PASSWORD: ${{ secrets.MINISIGN_PRIVATE_KEY_PASSWORD }}
        run: |
          echo "${MINISIGN_PRIVATE_KEY}" > minisign.key
          go run ./cmd/release -minisign-private-key minisign.key .
      - name: Upload To Release Bucket
        run: gcloud storage rsync -r .build/release gs://buf-plugins
      - name: Clean Up
        if: always()
        run: |
          rm -fv minisign.key
