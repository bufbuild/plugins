linters-settings:
  errcheck:
    check-type-assertions: true
  forbidigo:
    forbid:
      - '^fmt\.Print'
      - '^print$'
      - '^println$'
      - '^panic$'
  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    # Default: ["standard", "default"]
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/bufbuild/plugins) # Custom section: groups all imports with the specified Prefix.
  godox:
    # TODO, OPT, etc. comments are fine to commit. Use FIXME comments for
    # temporary hacks, and use godox to prevent committing them.
    keywords: [FIXME]
  tagliatelle:
    # Check the struct tag name case.
    case:
      rules:
        json: snake
        yaml: snake
  varnamelen:
    ignore-decls:
      - T any
      - i int
      - wg sync.WaitGroup
linters:
  enable-all: true
  disable:
    - exhaustruct
    - varnamelen
    # Other disabled linters
    - cyclop            # covered by gocyclo
    - depguard          # not needed
    - funlen            # rely on code review to limit function length
    - gochecknoglobals  # sometimes useful to declare constants
    - gocognit          # dubious "cognitive overhead" quantification
    - gofumpt           # prefer standard gofmt
    - goimports         # using gci
    - ireturn           # "accept interfaces, return structs" isn't ironclad
    - lll               # don't want hard limits for line length
    - maintidx          # covered by gocyclo
    - mnd               # some unnamed constants are okay
    - nlreturn          # generous whitespace violates house style
    - perfsprint        # waiting for https://github.com/catenacyber/perfsprint/issues/21
    - rowserrcheck      # no SQL code in plugins
    - sqlclosecheck     # no SQL code in plugins
    - tenv              # replaced by usetesting
    - testpackage       # internal tests are fine
    - wastedassign      # not supported with generics
    - wrapcheck         # don't _always_ need to wrap errors
    - wsl               # generous whitespace violates house style
issues:
  exclude-dirs-use-default: false
  exclude-rules:
    - linters:
        - err113
        - goerr113
      text: "do not define dynamic errors"
    # dupword reports several errors in .proto test fixtures
    # gosec reports a few minor issues in tests
    - path: _test\.go
      linters:
        - dupword
        - gosec
